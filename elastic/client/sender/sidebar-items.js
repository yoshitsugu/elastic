initSidebarItems({"constant":[["DEFAULT_NODE_ADDRESS",""]],"mod":[["sniffed_nodes","Load balanced nodes sniffed regularly from an Elasticsearch cluster. "],["static_nodes","Multiple static nodes that can be load balanced by some strategy. "]],"struct":[["AsyncClientBuilder","A builder for an asynchronous client. "],["AsyncSender","An asynchronous request sender. "],["NodeAddress","A single node address."],["NodeAddresses","A common container for a source of node addresses."],["Params","A set of parameters returned by calling `next` on a sync set of `NodeAddresses`. "],["PendingParams","A future returned by calling `next` on an async set of `NodeAddresses`. "],["PendingResponse","A future returned by calling `send` on an `AsyncSender`. "],["PreRequestParams","An incomplete set of request parameters."],["RequestParams","Parameters for a single REST API request."],["SendableRequest","A sendable request."],["SyncClientBuilder","A builder for a syncronous client. "],["SyncSender","A synchronous request sender. "]],"trait":[["IntoAsyncHttpClient","A type that can be used to construct an async http client."],["NextParams","Represents a type that can fetch request parameters."],["Sender","Represents a type that can send a request."]],"type":[["AsyncClient","An asynchronous Elasticsearch client."],["SyncClient","A synchronous Elasticsearch client."]]});