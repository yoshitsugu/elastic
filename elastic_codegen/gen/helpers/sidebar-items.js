initSidebarItems({"fn":[["doc","AST for an outer doc comment."],["field","AST for a simple field access."],["generics","Generics with the given lifetimes and type bounds."],["generics_a","Generics with a standard `'a` lifetime."],["generics_none","Generics with no parameters."],["ident","Build a sanitised `Ident`."],["lifetime","A standard `'a` lifetime."],["lit","Build a literal"],["method","AST for a simple method call."],["parse_expr","Parse quoted tokens to an expression."],["parse_item","Parse quoted tokens to an item."],["path","AST for a path variable."],["path_none","AST for a simple path variable."],["path_segments","AST for a path variable."],["ty","AST for a simple path type."],["ty_a","AST for a path type with a `'a` lifetime."],["ty_bound","AST for a generic type param bound."],["ty_param","AST for a simple type param."],["ty_path","AST for a path type with lifetimes and type parameters."]],"trait":[["GetIdent",""],["GetPath",""],["HasLifetime",""],["IntoExpr","Helper for wrapping a value as a quotable expression."],["IntoRustTypeName","Parse a name to a Rust PascalCase type name."],["IntoRustVarName","Parse a name to a Rust snake_case variable name."],["IntoStmt","Helper for wrapping a value as a quotable statement."],["IntoTy","Helper for wrapping a value as a quotable statement."]]});